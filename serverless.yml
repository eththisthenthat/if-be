service: ethttt-if-be

plugins:
  - serverless-dynamodb-local
  - serverless-dotenv-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "lambda:InvokeFunction"
      Resource: "*"
        # - { "Fn::GetAtt": ["usersTable", "Arn"] }
        # - { "Fn::GetAtt": ["actionsTable", "Arn"] }
        # - { "Fn::GetAtt": ["tasksTable", "Arn"] }
        # - { "Fn::GetAtt": ["pricesTable", "Arn"] }

# you can define service wide environment variables here
# environment:
#   SLS_DEBUG: '*'

functions:
  - ${file(./routes/users.yml)}
  - ${file(./routes/actions.yml)}
  - ${file(./routes/tasks.yml)}
  - ${file(./lambdas/getPrice.yml)}
  - ${file(./lambdas/checkPrice.yml)}
  - ${file(./lambdas/transferEther.yml)}

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "usersTable"
        AttributeDefinitions:
          - AttributeName: "address"
            AttributeType: S
        KeySchema:
          - AttributeName: "address"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    actionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "actionsTable"
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: S
        KeySchema:
          - AttributeName: "id"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    tasksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "tasksTable"
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: S
        KeySchema:
          - AttributeName: "id"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    pricesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "pricesTable"
        AttributeDefinitions:
          - AttributeName: "symbol"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "symbol"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom: 
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
