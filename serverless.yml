service: ethttt-if-be

plugins:
  - serverless-dynamodb-local
  - serverless-dotenv-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource: !GetAtt DynamoDBTable.Arn

# you can define service wide environment variables here
# environment:
#   SLS_DEBUG: '*'

functions:
  - ${file(./routes/users.yml)}
  - ${file(./routes/actions.yml)}

  # getEthPrice:
  #   handler: handler.getEthPrice
  #   events: 
  #     - schedule: rate(1 minute)

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "usersTable"
        AttributeDefinitions:
          - AttributeName: "address"
            AttributeType: S
        KeySchema:
          - AttributeName: "address"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    actionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "actionsTable"
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: S
        KeySchema:
          - AttributeName: "id"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: actionsTable
            sources: [./seeds/actions.json]